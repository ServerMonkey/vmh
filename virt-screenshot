#!/usr/bin/python3
import sys
import os
import libvirt
from subprocess import PIPE, Popen


def shell_cmd(cmd):
    p = Popen(cmd, shell=True, stdout=PIPE, stderr=PIPE)
    stdout, stderr = p.communicate()
    stdout = str(stdout).rstrip("b''")
    stderr = str(stderr).rstrip("b''")

    if stderr != '':
        if stdout != '':
            print("stdout", "err", stdout)
        print("stderr", "err", stderr)
        exit(1)
    else:
        return stdout


img_no_display = "/usr/local/share/vmh/no-display.ppm"

# fix a QEMU bug where the red and blue colors are swapped
qemu_version = shell_cmd("qemu-system-x86_64 --version")
if 'version 7.2.2' in qemu_version:
    fix_colors = True
else:
    fix_colors = False

domName = None
try:
    domName = str(sys.argv[1])
except IndexError:
    print("Missing DOMAIN parameter")
    exit(1)

conn = None
try:
    conn = libvirt.open("qemu:///system")
except libvirt.libvirtError as e:
    print(repr(e), file=sys.stderr)
    exit(1)

dom = None
try:
    dom = conn.lookupByName(domName)
except libvirt.libvirtError as e:
    print(repr(e), file=sys.stderr)
    exit(1)

file_out = None
try:
    file_out = str(sys.argv[2])
except IndexError:
    path_home = os.path.expanduser("~")
    file_out = path_home + "/shot_" + dom.name() + ".ppm"


stream = conn.newStream()

try:
    imageType = dom.screenshot(stream, 0)
except libvirt.libvirtError as e:
    # if there is no surface, copy the 'no-display' image
    if 'no surface' in repr(e):
        # check if the 'no-display' image exists
        if not os.path.exists(img_no_display):
            print('No surface and no ' + img_no_display + ' found')
            exit(1)
        shell_cmd("cp " + img_no_display + " " + file_out)
        print('Empty screenshot (error fallback) to: ' + file_out)
        conn.close()
        exit(0)
    else:
        print(repr(e), file=sys.stderr)
        exit(1)

fileHandler = open(file_out, 'wb')
streamBytes = stream.recv(262120)

while streamBytes != b'':
    fileHandler.write(streamBytes)
    streamBytes = stream.recv(262120)
fileHandler.close()

print('Screenshot saved to: ' + file_out)
stream.finish()
conn.close()

if fix_colors:
    file_out_new = file_out + ".tmp"
    shell_cmd("convert " + file_out + " -recolor '0 0 1, 0 1 0, 1 0 0' " +
              file_out_new)
    os.remove(file_out)
    os.rename(file_out_new, file_out)

exit(0)
