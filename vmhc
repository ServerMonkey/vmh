#!/bin/sh

# help
if [ -z "$1" ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    man vmh.1 || ronn -r <README.md | man -l -
    exit
fi

# must run as normal user
if [ "$(id -u)" = 0 ]; then
    echo 'This script must be run as a normal user, not root!' >&2
    exit 1
fi

# set default URI
if [ -z "$LIBVIRT_DEFAULT_URI" ]; then
    export LIBVIRT_DEFAULT_URI="qemu:///system"
fi

# set default display
if [ -z "$DISPLAY" ]; then
    export DISPLAY=:0
fi

DOMAIN="$1"
ARG="$2"
FULL_ARG=""
if [ "$ARG" = "f" ]; then
    FULL_ARG="-f"
elif [ "$ARG" = "k" ]; then
    FULL_ARG="-k"
fi

error() {
    # logger -t "vmhandler" "ERROR: $DOMAIN: $1"
    echo "ERROR: $DOMAIN: $1" >&2
    exit 1
}

warn() {
    # logger -t "vmhandler" "WARNING: $DOMAIN: $1"
    echo "WARNING: $DOMAIN: $1" >&2
}

info() {
    # logger -t "vmhandler" "INFO: $DOMAIN: $1"
    echo "INFO: $DOMAIN: $1" >&2
}

webinfo() {
    echo "$1"
}

# verify input
if [ -z "$DOMAIN" ]; then
    error "Must specify a DOMAIN"
fi

#is_running() {
#	if [ -z "$1" ]; then
#		error "is_running: variable is unset or empty"
#	fi
#
#	# shellcheck disable=SC2009
#	if ps -ef | grep qemu-system-x86_64 | grep -qx "guest=$1"; then
#		return 0
#	else
#		return 1
#	fi
#}
#if [ -z "$FULL_ARG" ]; then
#    if ! is_running "$DOMAIN"; then
#        error "Domain is not running"
#    fi
#fi

info "trying to connect to: $DOMAIN"
# shellcheck disable=SC2086
virt-viewer "$DOMAIN" --reconnect --wait $FULL_ARG 1>/dev/null 2>/dev/null &
